tp<-table(partij)
prop.table(tp)
#And a graphic for political party
plot(partij)
gem2<-data.frame(gemeente$GEMEENTE, gemeente$WW_PER_100)
ww <- gemeente$WW_PER_100
index <- with(gem2, order(ww))
gem3<-with(gem2, gem2[order(ww, decreasing=TRUE),])
# cities highest unemployment
head(gem3, 10)
# cities with the lowest unemployment
gem3<-with(gem2, gem2[order(ww, decreasing=FALSE),])
head(gem3, 10)
tgp<-table(partij,gender)
tgp
# now as proportions of the row
prop.table(tgp,1)
# and here is the plot
plot(tgp)
# and the row sums
rowSums(tgp)
# and the column sums
colSums(tgp)
#This is enough to calculate the relationship between gender and political party. We calculate chi-square:
chisq.test(tgp)
#H0: no relationship between gender and party H1: gender and party are releted The P-Value is 0.101905. The result is not significant at p < 0.05. Chi one side at 5% is 14.1 and 2.5% 16, which higher than Chi observed. Therefore H0 is not rejected.
income<-gemeente$GEM_INKOME
woz<-gemeente$GEM_WOZ
# what is the correlation between the two
cor(income,woz)
## [1] 0.666597
# next the graphs; two different plots
plot(income,woz)
abline (v=mean(income), col="yellow")
abline(h=mean(woz), col="red")
# and finally the linear model(regression)
fit <-lm(woz~income)
abline(fit, col="green")
require("lattice")
xyplot(woz~income|partij)
xyplot(woz~income|factor(partij), type=c("p","r"))
#Finally we make a nicer graph with ggplot.
require("ggplot2")
## Loading required package: ggplot2
ggplot(gemeente, aes(x=income, y=woz))+
geom_point() + stat_smooth()
klein<-gemeente[gemeente$BEVOLKING < mean(gemeente$BEVOLKING), c('PARTIJ','GEM_INKOMEN', 'GEM_WOZ','AUTOBEZIT','WW_PER_100')]
cor(klein$GEM_INKOME,klein$GEM_WOZ)
groot<-gemeente[gemeente$BEVOLKING > mean(gemeente$BEVOLKING), c('PARTIJ','GEM_INKOMEN', 'GEM_WOZ','AUTOBEZIT','WW_PER_100')]
cor(groot$GEM_INKOME,groot$GEM_WOZ)
mean(groot$AUTOBEZIT)
mean(klein$AUTOBEZIT)
#Let's see how the relationship look like for one political party.
cda <-gemeente$GEM_INKOME[gemeente$PARTIJ=="CDA"]
summary(cda)
vvd <-gemeente$GEM_INKOME[gemeente$PARTIJ=="VVD"]
summary(vvd)
#And some more:
cda2<-groot$GEM_INKOMEN[groot$PARTIJ=="CDA"]
summary(cda2)
cda3<-klein$GEM_INKOMEN[klein$PARTIJ=="CDA"]
summary(cda3)
cda4<-gemeente[gemeente$PARTIJ == "CDA", c('PARTIJ','GEM_INKOMEN', 'GEM_WOZ','AUTOBEZIT','WW_PER_100', 'BEVOLKING')]
summary(cda4$BEVOLKING)
urban<-ifelse(gemeente$BEVOLKING > mean(gemeente$BEVOLKING) ,"g","k")
table(urban)
inc<-ifelse(gemeente$GEM_INKOME > mean(gemeente$GEM_INKOME) ,"r","a")
table(inc)
table(urban,inc)
plot(table(urban,inc))
# now the chi testing
chisq.test(table(inc,urban))
# and the correlation:
cor(gemeente$BEVOLKING,gemeente$GEM_INKOME)
#Have a look at the following for P_values and significance
install.packages("yarrr")
library(yarrr)
pirateplot(formula=GEM_INKOMEN ~ PARTIJ,DATA=gemeente)
pirateplot(formula=GEM_INKOMEN ~ PARTIJ, data=gemeente)
install.packages("WDI")
library("WDI", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
WDIsearch('doing business'
)
dat <- WDI(country = "all",
indicator = "IC.BUS.EASE.XQ",
start = 2016,
end = 2016)
head(dat)
str(dat)
WDIsearch('Dealing with')
dim1 <- WDI(country = "all",
indicator = "IC.FRM.XQ",
start = 2016,
end = 2016)
head(dim1)
str(dim1)
setwd("/home/peter/Documents/Documenten_win10/R/r_exercise/R")
gemeente <- read.csv("gemeentedata.csv")
str(gemeente)
head(gemeente,10)
summary(gemeente)
mean(gemeente$GEM_INKOME)
max(gemeente$GEM_INKOME)
min(gemeente$GEM_INKOME)
sd(gemeente$GEM_INKOME)
hist(gemeente$GEM_INKOME)
#Let's give it a different colour class with 20 and a line for mean
hist(gemeente$GEM_INKOME, 20, col="red")
abline(v=mean(gemeente$GEM_INKOME, col="blue"))
# And some other variations, as continuous variable:
x<-density(gemeente$GEM_INKOME)
plot(x)
hist(gemeente$GEM_INKOME, 20, col="red")
abline(v=mean(gemeente$GEM_INKOME, col="blue"))
plot(x)
abline(v=mean(gemeente$GEM_INKOME, col="blue"))
gender<-gemeente$GESLACHT
partij<-gemeente$PARTIJ
table(gender)
table(partij)
tg<-table(gender)
prop.table(tg)
tp<-table(partij)
prop.table(tp)
library(yarrr)
pirateplot(formula=GEM_INKOMEN ~ PARTIJ, data=gemeente)
library("markdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
a<-2
a
b<-3
b
a*b
library("dbplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("tidyverse", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("tidyselect", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
load("/home/peter/Desktop/ha2018/BIGMAC/.RData")
bm1
dat
country<-bm1$country
dat<-cbind(dat,country)
dat
df<-dat[1:3,]
rownames(df)
rownames(df)<-letters[1:3]
rownames(df)
rownames(df)<-[dat$country]
rownames(df)<-[country]
rownames(df)[1]<-"South Africa"
rownames(df)
dat
df
dat
dat$country<-NULL
dat
country
dat1<-rbind(dat,country)
dat1
df<-dat[1:15, ]
df
df<-dat[1:16, ]
df
df<-dat[1:14, ]
df
rownames(df[1])<-"South Africa"
rownames(df)[1]<-"South Africa"
rownames(df)[2]<-"Malawi"
rownames(df)[3]<-"Zambia"
rownames(df)[4]<-"Angola"
rownames(df)[5]<-"Mozambique"
rownames(df)[6]<-"Kenya"
rownames(df)[7]<-"Tanzania"
rownames(df)[8]<-"Uganda"
rownames(df)[9]<-"Nigeria"
rownames(df)[10]<-"Namibia"
rownames(df)[11]<-"Botswana"
rownames(df)[12]<-"Ghana"
rownames(df)[13]<-"Mauritius"
rownames(df)[14]<-"Seychelles"
rownames(df)
df
dat<-df
dat
library("ECharts2Shiny", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("shiny", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
str(dat)
rownames(dat)
dat <- data.frame(c(dat$raw),
c(dat$adj.index))
names(dat) <- c("raw_index", "adj_index")
rownames(dat)
# Server function -------------------------------------------
server <- function(input, output) {
# Call functions from ECharts2Shiny to render charts
renderBarChart(div_id = "test", grid_left = '1%', direction = "horizontal",
data = dat)
}
# UI layout -------------------------------------------------
ui <- fluidPage(
# We MUST load the ECharts javascript library in advance
loadEChartsLibrary(),
tags$div(id="test", style="width:50%;height:400px;"),
deliverChart(div_id = "test")
)
# Run the application --------------------------------------
shinyApp(ui = ui, server = server)
install.packages('devtools')
devtools::install_github('bbc/bbplot')
if(!require(pacman))install.packages("pacman")
pacman::p_load('dplyr', 'tidyr', 'gapminder',
'ggplot2',  'ggalt',
'forcats', 'R.utils', 'png',
'grid', 'ggpubr', 'scales',
'bbplot')
line_df <- gapminder %>%
filter(country == "Malawi")
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Malawi 1952-2007")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
line_df <- gapminder %>%
filter(country == "Malawi")
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Malawi 1952-2007")
install.packages("gapminder")
library("gapminder", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
line_df <- gapminder %>%
filter(country == "Malawi")
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Malawi 1952-2007")
library("dbplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("tidyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
line_df <- gapminder %>%
+     filter(country == "Malawi")
load('dplyr', 'tidyr', 'gapminder',
'ggplot2',  'ggalt',
'forcats', 'R.utils', 'png',
'grid', 'ggpubr', 'scales',
'bbplot')
install.packages("ggalt")
library("ggalt", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
install.packages("forcats")
library("forcats", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
install.packages("R.utils")
library("R.utils", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
install.packages("png")
library("png", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
install.packages("gridBase")
library("bbplot", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("gridBase", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("gridExtra", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
install.packages("ggpubr")
library("ggpubr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("scales", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
line_df <- gapminder %>%
filter(country == "Malawi")
summary(line_df)
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Malawi 1952-2007")
line_df<-data.frame(line_df)
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Malawi 1952-2007")
line
finalise_plot(plot_name = my_line_plot,
source = "Source: Gapminder",
save_filepath = "filename_that_my_plot_should_be_saved_to.png",
width_pixels = 640,
height_pixels = 450,
logo_image_path = "placeholder.png")
stacked_df <- gapminder %>%
filter(year == 2007) %>%
mutate(lifeExpGrouped = cut(lifeExp,
breaks = c(0, 50, 65, 80, 90),
labels = c("Under 50", "50-65", "65-80", "80+"))) %>%
group_by(continent, lifeExpGrouped) %>%
summarise(continentPop = sum(as.numeric(pop)))
#set order of stacks by changing factor levels
stacked_df$lifeExpGrouped = factor(stacked_df$lifeExpGrouped, levels = rev(levels(stacked_df$lifeExpGrouped)))
#create plot
stacked_bars <- ggplot(data = stacked_df,
aes(x = continent,
y = continentPop,
fill = lifeExpGrouped)) +
geom_bar(stat = "identity",
position = "fill") +
bbc_style() +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d(direction = -1) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "How life expectancy varies",
subtitle = "% of population by life expectancy band, 2007") +
theme(legend.position = "top",
legend.justification = "left") +
guides(fill = guide_legend(reverse = TRUE))
stacked_df <- gapminder %>%
filter(year == 2007)
str(gapminder)
stacked_df <- gapminder %>%
filter(gapminder$year == 2007)
mutate(lifeExpGrouped = cut(lifeExp,
breaks = c(0, 50, 65, 80, 90),
labels = c("Under 50", "50-65", "65-80", "80+"))) %>%
group_by(continent, lifeExpGrouped) %>%
summarise(continentPop = sum(as.numeric(pop)))
#set order of stacks by changing factor levels
stacked_df$lifeExpGrouped = factor(stacked_df$lifeExpGrouped, levels = rev(levels(stacked_df$lifeExpGrouped)))
#create plot
stacked_bars <- ggplot(data = stacked_df,
aes(x = continent,
y = continentPop,
fill = lifeExpGrouped)) +
geom_bar(stat = "identity",
position = "fill") +
bbc_style() +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d(direction = -1) +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
labs(title = "How life expectancy varies",
subtitle = "% of population by life expectancy band, 2007") +
theme(legend.position = "top",
legend.justification = "left") +
guides(fill = guide_legend(reverse = TRUE))
line_df <- gapminder %>%
filter(country == "Malawi")
str(line_df)
View(line_df)
line_df <- gapminder %>%
filter(country == "China")
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in China 1952-2007")
line_df<-dataframe(line_df)
line_df<-data.frame(line_df)
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in China 1952-2007"
)
line
line_df <- Gapminder$country == "China"
line_df <-gapminder$country == "China"
str(line_df)
str(gapminder)
line_df <-gapminder$country ="China"
line_df<-gapminder$country
View(line_df)
line_df <- gapminder %>%select(year, lifeExp,pop,gdpPercap) %>%
filter(country == "China")
#Make plot
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in China 1952-2007")
line_df<-data.frame(gapminder)
line_df<-line_df(year, lifeExp,pop,gdpPercap)
line_df %>% select(year, lifeExp,pop,gdpPercap)
detach("package:bbplot", unload=TRUE)
library("bbplot", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
detach("package:dbplyr", unload=TRUE)
line_df %>% select(year, lifeExp,pop,gdpPercap)
line_df %>% filter(country == "China")
line_df %>% select(country,year,lifeExp,pop,gdpPercap) %>% filter(country == "China")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library("bbplot", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("gapminder", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("ggalt", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("ggpubr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("forcats", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("gridBase", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("gridExtra", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("png", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("R.utils", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("scales", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
line_df <- gapminder %>%
filter(country == "Malawi")
str(line_df)
View(line_df)
line <- ggplot(line_df, aes(x = year, y = lifeExp)) +
geom_line(colour = "#1380A1", size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in Malawi 1952-2007")
line
multiple_line_df <- gapminder %>%
filter(country == "China" | country == "United States")
#Make plot
multiple_line <- ggplot(multiple_line_df, aes(x = year, y = lifeExp, colour = country)) +
geom_line(size = 1) +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
scale_colour_manual(values = c("#FAAB18", "#1380A1")) +
bbc_style() +
labs(title="Living longer",
subtitle = "Life expectancy in China and the US")
line
multiple_line
library("plotly", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
multiple_line
p<-plot_ly(multiple_line)
p<-plot_ly((line_df, aes(x = year, y = lifeExp)) +
+     geom_line(colour = "#1380A1", size = 1) +
+     geom_hline(yintercept = 0, size = 1, colour="#333333") +
+     bbc_style() +
+     labs(title="Living longer",
+          subtitle = "Life expectancy in Malawi 1952-2007"
p<-plot_ly((line_df, aes(x = year, y = lifeExp)) +
+     geom_line(colour = "#1380A1", size = 1) +
+     geom_hline(yintercept = 0, size = 1, colour="#333333") +
+     bbc_style() +
+     labs(title="Living longer",
+          subtitle = "Life expectancy in Malawi 1952-2007")
p<-plot_ly((line_df, aes(x = year, y = lifeExp)) +
+     geom_line(colour = "#1380A1", size = 1) +
+     geom_hline(yintercept = 0, size = 1, colour="#333333") +
+     bbc_style() +
)
p
hist_df <- gapminder %>%
filter(year == 2007)
ggplot(hist_df, aes(lifeExp)) +
geom_histogram(binwidth = 5, colour = "white", fill = "#1380A1") +
geom_hline(yintercept = 0, size = 1, colour="#333333") +
bbc_style() +
scale_x_continuous(limits = c(35, 95),
breaks = seq(40, 90, by = 10),
labels = c("40", "50", "60", "70", "80", "90 years")) +
labs(title = "How life expectancy varies",
subtitle = "Distribution of life expectancy in 2007")
install.packages("blogdown")
library("blogdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("blogdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
blogdown::install_hugo()
library("blogdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
blogdown::serve_site()
library("blogdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("blogdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
blogdown::new_site()
blogdown::new_site()
library("blogdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
pwd
ls()
library("blogdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("blogdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("blogdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library("blogdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
getwd()
setwd("/home/peter/test")
blogdown:build_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown::build_site()
blogdown:::serve_site()
install.packages("pacman")
library("markdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
pacman::p_load('dplyr', 'tidyr', 'gapminder',
'ggplot2',  'ggalt',
'forcats', 'R.utils', 'png',
'grid', 'ggpubr', 'scales',
'bbplot')
p_install_version(
c("pacman", "testthat"),
c("0.2.0", "0.9.1")
)
library(devtools)
install_github("trinker/pacman")
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
